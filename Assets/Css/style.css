* {
    margin: 0%;
    padding: 0%;
    font-family: Hotdog;
}

/* #region popup */
#popup {
    position: fixed;
    height: 100px;
    width: 250px;
    background-color: black;
    /*
    top: 0;
    left: 0;*/
    z-index: 1000;
    /*
    padding-top: calc(50vh - 50px);
    padding-left: calc(50vw - 125px);
    padding-bottom: calc(50vh - 50px);
    padding-right: calc(50vw - 125px); */
    margin: auto;
}

#popup::backdrop {
    background-color: transparent;
    height: 100%;
}

#popup button {
    display: flex;
}

/* #endregion */

body {
    background-color: var(--siteBackgroundColor);
}

main {
    height: calc(100vh - calc(calc(var(--footerHeight) + var(--headerHeight))));
    min-height: calc(100vh - calc(calc(var(--footerHeight) + var(--headerHeight))));
}

img {
    border-radius: 100%;
}

p {
    color: var(--textColor);
}

th {
    text-align: start;
    font-weight: 200;

    color: var(--textColor);
}

table textarea {
    width: 150px;
    height: 100px;
}

a {
    text-decoration: none;
}

h1 {
    text-transform: uppercase;
    color: var(--textColor);
}

h2 {
    text-transform: uppercase;
    color: var(--textColor);
}

h3 {
    text-transform: uppercase;
    color: var(--textColor);
}

h4 {
    text-transform: uppercase;
    color: var(--textColor);
}

h5 {
    text-transform: uppercase;
    color: var(--textColor);
}

h6 {
    text-transform: uppercase;
    color: var(--textColor);
}

fieldset {
    display: flex;
    border-color: blue;
    flex-direction: column;
    justify-content: space-around;
}

/* #region input */
input {
    border-radius: 15px;
    height: 25px;
    width: 150px;
    text-align: center;
}

input::placeholder {
    color: var(--placeholderColor);
}

/*#region input file*/
input[type=file] {
    width: 150px;
    height: 25px;
    padding: 1.8px;
    background: #fff;
    border-radius: 10px;
    border: 1px solid rgba(8, 8, 8, 0.288);
}

input[type=file]::file-selector-button {
    margin-right: 5px;
    width: 50px;
    height: 20px;
    border: none;
    background: #084cdf;
    padding: 3px 4px;
    border-radius: 10px;
    color: #fff;
    cursor: pointer;
    transition: background .2s ease-in-out;
}

input[type=file]::file-selector-button:hover {
    background: #0d45a5;
}

/*#endregion*/
/*#region input color*/
input[type=color] {
    border-radius: 15px;
    cursor: pointer;
}

::-webkit-color-swatch-wrapper {
    padding: 0;
}

::-webkit-color-swatch {
    border-radius: 15px;
}

/*#endregion*/
input[type=range] {
    appearance: none;
    cursor: pointer;
}

input[type=checkbox] {
    width: 25px;
}

/* #endregion input */

select {
    width: 150px;
    height: 25px;
    border-radius: 15px;
    border: solid 1px black;
}

textarea {
    border-radius: 10px;
    padding: 2px;
}

/* #region color */
.red {
    color: red;
}

.black {
    color: black;
}

/* #endregion */

.tHead {
    font-weight: 500;
    font-size: 20px;
}

.tText {
    font-weight: lighter;
    color: rgb(200, 200, 200);
}

.fullHeight {
    height: var(--screenHeight);
}

button {
    width: 150px;
    height: 50px;

    font-size: 16px;

    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;

    text-transform: uppercase;

    border: none;
    border-radius: 10px;

    color: #fff;
    background-color: #333;

    font-weight: 300;

    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.02, 0.01, 0.47, 1);
}

button:hover {
    animation: sh0 0.5s ease-in-out both;
}

/*#region button more*/
@keyframes sh0 {
    0% {
        transform: rotate(0deg) translate3d(0, 0, 0);
    }

    25% {
        transform: rotate(7deg) translate3d(0, 0, 0);
    }

    50% {
        transform: rotate(-7deg) translate3d(0, 0, 0);
    }

    75% {
        transform: rotate(1deg) translate3d(0, 0, 0);
    }

    100% {
        transform: rotate(0deg) translate3d(0, 0, 0);
    }
}

.more {
    width: 75px;
    height: 40px;

    font-size: 18px;

    position: relative;

    display: flex;
    justify-content: center;
    align-items: center;

    cursor: pointer;

    text-transform: uppercase;

    border: none;
    border-radius: 10px;

    color: #fff;
    background-color: #333;

    font-weight: 300;

    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.02, 0.01, 0.47, 1);
}

.more:hover {
    animation: sh0 0.5s ease-in-out both;
}



.more:hover span {
    animation: storm 0.7s ease-in-out both;
    animation-delay: 0.06s;
}

.more::before,
.more::after {
    content: '';
    position: absolute;
    right: 0;
    bottom: 0;
    width: 100px;
    height: 100px;
    border-radius: 50%;
    background: #fff;
    opacity: 0;
    transition: transform 0.15s cubic-bezier(0.02, 0.01, 0.47, 1), opacity 0.15s cubic-bezier(0.02, 0.01, 0.47, 1);
    z-index: -1;
    transform: translate(100%, -25%) translate3d(0, 0, 0);
}

.more:hover::before,
.more:hover::after {
    opacity: 0.15;
    transition: transform 0.2s cubic-bezier(0.02, 0.01, 0.47, 1), opacity 0.2s cubic-bezier(0.02, 0.01, 0.47, 1);
}

.more:hover::before {
    transform: translate3d(50%, 0, 0) scale(0.9);
}

.more:hover::after {
    transform: translate(50%, 0) scale(1.1);
}

/*#endregion*/

/* #region switch */

.switch {
    /* switch */
    --switch-width: 46px;
    --switch-height: 24px;
    --switch-bg: #ff0000;
    --switch-checked-bg: rgb(0, 218, 80);
    --switch-offset: calc((var(--switch-height) - var(--circle-diameter)) / 2);
    --switch-transition: all .2s cubic-bezier(0.27, 0.2, 0.25, 1.51);
    /* circle */
    --circle-diameter: 18px;
    --circle-bg: #fff;
    --circle-shadow: 1px 1px 2px rgba(146, 146, 146, 0.45);
    --circle-checked-shadow: -1px 1px 2px rgba(163, 163, 163, 0.45);
    --circle-transition: var(--switch-transition);
    /* icon */
    --icon-transition: all .2s cubic-bezier(0.27, 0.2, 0.25, 1.51);
    --icon-cross-color: var(--switch-bg);
    --icon-cross-size: 6px;
    --icon-checkmark-color: var(--switch-checked-bg);
    --icon-checkmark-size: 10px;
    /* effect line */
    --effect-width: calc(var(--circle-diameter) / 2);
    --effect-height: calc(var(--effect-width) / 2 - 1px);
    --effect-bg: var(--circle-bg);
    --effect-border-radius: 1px;
    --effect-transition: all .2s ease-in-out;
}

.switch input {
    display: none;
}

.switch {
    display: inline-block;
}

.switch svg {
    -webkit-transition: var(--icon-transition);
    -o-transition: var(--icon-transition);
    transition: var(--icon-transition);
    position: absolute;
    height: auto;
}

.switch .checkmarkSwitch {
    width: var(--icon-checkmark-size);
    color: var(--icon-checkmark-color);
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
}

.switch .crossSwitch {
    width: var(--icon-cross-size);
    color: var(--icon-cross-color);
}

.slider {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    width: var(--switch-width);
    height: var(--switch-height);
    background: var(--switch-bg);
    border-radius: 999px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    position: relative;
    -webkit-transition: var(--switch-transition);
    -o-transition: var(--switch-transition);
    transition: var(--switch-transition);
    cursor: pointer;
}

.circle {
    width: var(--circle-diameter);
    height: var(--circle-diameter);
    background: var(--circle-bg);
    border-radius: inherit;
    -webkit-box-shadow: var(--circle-shadow);
    box-shadow: var(--circle-shadow);
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;
    -webkit-transition: var(--circle-transition);
    -o-transition: var(--circle-transition);
    transition: var(--circle-transition);
    z-index: 1;
    position: absolute;
    left: var(--switch-offset);
}

.slider::before {
    content: "";
    position: absolute;
    width: var(--effect-width);
    height: var(--effect-height);
    left: calc(var(--switch-offset) + (var(--effect-width) / 2));
    background: var(--effect-bg);
    border-radius: var(--effect-border-radius);
    -webkit-transition: var(--effect-transition);
    -o-transition: var(--effect-transition);
    transition: var(--effect-transition);
}

/* actions */

.switch input:checked+.slider {
    background: var(--switch-checked-bg);
}

.switch input:checked+.slider .checkmarkSwitch {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
}

.switch input:checked+.slider .crossSwitch {
    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);
}

.switch input:checked+.slider::before {
    left: calc(100% - var(--effect-width) - (var(--effect-width) / 2) - var(--switch-offset));
}

.switch input:checked+.slider .circle {
    left: calc(100% - var(--circle-diameter) - var(--switch-offset));
    -webkit-box-shadow: var(--circle-checked-shadow);
    box-shadow: var(--circle-checked-shadow);
}

/* #endregion */

#messageError {
    margin-top: 10px;
}

/* #region checkbox */
/* Hide the default checkbox */
.container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
}

.container {
    display: block;
    position: relative;
    cursor: pointer;
    font-size: 20px;
    user-select: none;
    margin-top: 3px;
}

/* Create a custom checkbox */
.checkmark {
    position: relative;
    top: 0;
    left: 0;
    height: 1.3em;
    width: 1.3em;
    background-color: #343434;
    border-radius: 5px;
    transition: all 0.5s;
    border: 2px solid black;
}

/* When the checkbox is checked, add a lightgreen background */
.container input:checked~.checkmark {
    background-color: lightgreen;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark:after {
    content: "";
    position: absolute;
    display: none;
    filter: drop-shadow(0 0 10px #888);
}

/* Show the checkmark when checked */
.container input:checked~.checkmark:after {
    display: block;
}

/* Style the checkmark/indicator */
.container .checkmark:after {
    left: 0.35em;
    top: 0.1em;
    width: 0.3em;
    height: 0.65em;
    border: solid white;
    border-width: 0 0.2em 0.2em 0;
    border-radius: 4px;
    transform: rotate(45deg);
    animation: bounceFadeIn 0.5s cubic-bezier(0.165, 0.84, 0.44, 1);
}

@keyframes bounceFadeIn {
    from {
        transform: translate(0, -10px) rotate(45deg);
        opacity: 0;
    }

    to {
        transform: translate(0, 0) rotate(45deg);
        opacity: 1;
    }
}

/* #endregion */